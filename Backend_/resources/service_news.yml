AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  AppName:
    Type: String
    Default: AppName
    Description: The Name of the App to be Created

  ServiceName:
    Type: String
    Default: NewsReports
    Description: The Name of the App to be Created

  AppRestAPI:
    Type: String
    Description: The RestAPI Id

  AppRestAPIRootResource:
    Type: String
    Description: The RestAPI Root ResourceId

Resources:
  ServiceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      BillingMode: "PAY_PER_REQUEST"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      TableName:
        Fn::Join:
          - "-"
          - - Ref: AppName
            - Ref: ServiceName
            - "Table"

  FunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: logcreation
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                Resource: arn:aws:logs:*:*:*
        - PolicyName: metriccreation
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: "*"
        - PolicyName: tableoperations
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource:
                  Fn::GetAtt:
                    - "ServiceTable"
                    - "Arn"
      RoleName:
        Fn::Join:
          - ""
          - - Ref: AppName
            - Ref: ServiceName
            - "MainFunctionExecution"

  MainFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code: "../dist/news/index.js"
      Description:
        Fn::Join:
          - " - "
          - - Ref: AppName
            - Ref: ServiceName
            - "Function to perform CRUD operations on Resources"
      Environment:
        Variables:
          "DYNAMO_TABLE_NAME":
            Ref: ServiceTable
      FunctionName:
        Fn::Join:
          - ""
          - - Ref: AppName
            - Ref: ServiceName
            - "MainFunction"
      Handler: "index.handler"
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - "FunctionExecutionRole"
          - "Arn"
      Runtime: "nodejs8.10"
      Timeout: 25

  RestResource:
    Properties:
      ParentId:
        Ref: AppRestAPIRootResource
      PathPart: "newsreport"
      RestApiId:
        Ref: AppRestAPI

  RestResourceGET:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "GET"
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS_PROXY"
        Uri:
          Fn::Join:
            - ""
            - - "arn:aws:apigateway:"
            - - Ref: "AWS::Region"
            - - ":lambda:path/2015-03-31/functions/"
            - - Fn::GetAtt:
                  - MainFunction
                  - Arn
            - - "/invocations"
      OperationName: "GetNewsReports"
      ResourceId:
        Ref: RestResource
      RestApiId:
        Ref: AppRestAPI
